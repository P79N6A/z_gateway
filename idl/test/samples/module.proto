syntax = "proto2";

option csharp_namespace = "Google.Cloud.Dlp.V2";
option go_package = "google.golang.org/genproto/googleapis/privacy/dlp/v2;dlp";
option java_multiple_files = true;
option java_outer_classname = "DlpProto";
option java_package = "com.google.privacy.dlp.v2";
option php_namespace = "Google\\Cloud\\Dlp\\V2";

// 学生
service Student {
    rpc TestCompleteParams(RequestData1) returns (ResponseBody) {
        option (z_gateway) = {
            uri: "/a/b/c"
            type: "POST"
        };
    }

    rpc TestRequestBody(RequestData2) returns (ResponseBody) {
        option (z_gateway) = {
            uri: "/a/b/c"
            type: "GET"
        };
    }
}

message RequestData1 {
    RequestParams  params = 1 [(z_gateway.param_type) = "params"];
    RequestHeaders headers = 2 [(z_gateway.param_type) = "headers"];
    RequestBody    body = 3 [(z_gateway.param_type) = "body"];
}

message RequestParams {
    int64 student_no = 1;
    int32 content_type = 0; // 0 - 简短的内容， 1 - 详细信息
}

message StudentItem {
    string name = 1;
    int32 age = 2;
}

message MessageData {
    int32 code = 1;
    string message = 2;
    repeated StudentItem items = 3;
}

message RequestHeaders {
    repeated int32 max_findings = 1;
    double min_findings = 2;
}

message RequestBody {
    int32 max_findings = 1;
    double min_findings = 2;
    MessageData data = 3;
}



message RequestData2 {
    RequestParams  params = 1 [(z_gateway.param_type) = "params"];
    RequestHeaders headers = 2 [(z_gateway.param_type) = "headers"];
}

message ResponseBody {
    int32 max_findings = 1;
    double min_findings = 2; 
}

